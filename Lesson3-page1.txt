Page: https://docs.zkasino.io/developer/probability-odds-and-house-edge/dice#chance-and-multiplier Dice | ZKasino DocumentationZKasino DocumentationWebsitedAppTwitterTelegramMoreWebsitedAppTwitterTelegramSearch...Ctrl + KWelcomeTokenomicsZKasino BridgeZKasino Chain TestnetZKasinoRoadmap and FAQResponsible GamingLive SupportIPFS hostingMainnet GuideOfficial LinksPlatformGlossaryBettingChains and Bet tokensSelf ExclusionDeveloperContract addressesAuditsInfrastructureVRF OracleArchitectureMetaplayProbability, Odds and House EdgeDicePlinkoVideo PokerSlotsMinesRock Paper ScissorsCoin FlipKelly-based bankroll managementChangelogGame contracts v2.1Game contracts v2.0Contracts v1.0Integrated VRFs (old)Testnet Guide (outdated)TestingBNB Chain private fee testingv2.1 private testnet WIPv2.0 public testnetv2.0 private testnetmulti-chain private mainnet with VRFv1.1 public testnetmulti-chain private testnet with VRFv1.0 public testnetwip v1.0 private testnetv2.1 public testnetPowered by GitBookOn this pageChance and MultiplierHouse EdgeOddsDeveloperProbability, Odds and House EdgeDiceChance and MultiplierDice is a game where you roll over (or equal to) or under (or equal to) a number to win. Chance is chosen by the player (0.01%-98%). The multiplier is set so the return is always 0.99 compared to the win chance. Through a simple formula (with Chance ranging from 0.1 to 95) the multiplier for every chance input from the player can be calculated.Multiplier=0.99100Chance\text{Multiplier} = 0.99 \frac{100}{\text{Chance}}Multiplier=0.99Chance100​The available multipliers can be found in the Dice contract where 10421 stands for the 1.0421x multiplier and 9900000 for the 990x multiplier:Copyif (!(multiplier >= 10421 && multiplier <= 9900000))Here are some examples of specific outcomes:Player outcomeChanceMultiplierWin95% (highest)1.0421xWin50%1.98xWin49.5%2xWin0.1% (lowest)990xLoss0.1%-95%0xHouse EdgeThe 1% house edge is taken when the win chance is being calculated, because 99000000000 is always being divided by the multiplier:Copyuint256 winChance = 99000000000 / game.multiplier;When we take the 2x multiplier as an example, 99000000000/20000=4950000 leads to a 49.5% win chance. This is a 1% house edge (50.5-49.5). On a win or loss the average return is always 0.99.OddsThe numbers above lead to the following odds for Dice:OddsOutcomeDecimal odds0.99Return to Player99%Probability odds49.5%PreviousProbability, Odds and House EdgeNextPlinkoLast updated 2 years ago Page: https://docs.zkasino.io/developer/probability-odds-and-house-edge/plinko#odds Plinko | ZKasino DocumentationZKasino DocumentationWebsitedAppTwitterTelegramMoreWebsitedAppTwitterTelegramSearch...Ctrl + KWelcomeTokenomicsZKasino BridgeZKasino Chain TestnetZKasinoRoadmap and FAQResponsible GamingLive SupportIPFS hostingMainnet GuideOfficial LinksPlatformGlossaryBettingChains and Bet tokensSelf ExclusionDeveloperContract addressesAuditsInfrastructureVRF OracleArchitectureMetaplayProbability, Odds and House EdgeDicePlinkoVideo PokerSlotsMinesRock Paper ScissorsCoin FlipKelly-based bankroll managementChangelogGame contracts v2.1Game contracts v2.0Contracts v1.0Integrated VRFs (old)Testnet Guide (outdated)TestingBNB Chain private fee testingv2.1 private testnet WIPv2.0 public testnetv2.0 private testnetmulti-chain private mainnet with VRFv1.1 public testnetmulti-chain private testnet with VRFv1.0 public testnetwip v1.0 private testnetv2.1 public testnetPowered by GitBookOn this pageProbabilityMultiplierHouse EdgeOddsDeveloperProbability, Odds and House EdgePlinkoPreviousDiceNextVideo PokerLast updated 2 years agoProbabilityThe player can choose between 8 to 16 rows. There are 9 to 17 slots (row amount+1) for the ball to fall into. The probabilities of the ball hitting a specific slot can be found in this table:MultiplierThe player can adjust their risk level to Low, Medium, or High. By changing the risk level, the slot multipliers change too. The multipliers are noted in this table:Note: The multipliers of the Plinko game can't be found in the code, because the multipliers have to be set when the contract gets deployed. Invoke the function Plinko_GetMultipliers on the deployed contract to verify the multipliers.The player's return is also calculated in the table above under 'mean'. The average return can be calculated by taking the average of all 'means' in the table above. For risk Low, this is 0.97938. For risk Medium, this is 0.9798. For risk High, this is 0.9786. Taking the average of all risks, the return is 0.97926.House EdgeA return of 0.97926 gives a house edge of 2.074% ((1-0.97926)*100).OddsThis leads to the following odds for Plinko:OddsDecimal odds0.97926Return to Player97.926%Probability odds48.963% Page: https://docs.zkasino.io/developer/kelly-based-bankroll-management#probability-examples-for-reaching-2x-kelly Kelly-based bankroll management | ZKasino DocumentationZKasino DocumentationWebsitedAppTwitterTelegramMoreWebsitedAppTwitterTelegramSearch...Ctrl + KWelcomeTokenomicsZKasino BridgeZKasino Chain TestnetZKasinoRoadmap and FAQResponsible GamingLive SupportIPFS hostingMainnet GuideOfficial LinksPlatformGlossaryBettingChains and Bet tokensSelf ExclusionDeveloperContract addressesAuditsInfrastructureVRF OracleArchitectureMetaplayProbability, Odds and House EdgeDicePlinkoVideo PokerSlotsMinesRock Paper ScissorsCoin FlipKelly-based bankroll managementChangelogGame contracts v2.1Game contracts v2.0Contracts v1.0Integrated VRFs (old)Testnet Guide (outdated)TestingBNB Chain private fee testingv2.1 private testnet WIPv2.0 public testnetv2.0 private testnetmulti-chain private mainnet with VRFv1.1 public testnetmulti-chain private testnet with VRFv1.0 public testnetwip v1.0 private testnetv2.1 public testnetPowered by GitBookOn this pageKelly FractionsUsing KellyProbability examples for reaching 2x+ KellyIn summary:DeveloperKelly-based bankroll managementKelly FractionsThe Kelly criterion maximizes the rate of growth of a bankroll subject to random disturbances.1 ZKasino's bankroll is managed according to the Kelly criterion by establishing a maximum bet a player can place on each game, and thus bet against the bankroll. To calculate this maximum bet, the Kelly fraction has to be found. This is a fraction of the current bankroll to wager. The Kelly fraction changes with the amount of outcomes a game has.ZKasino uses 1x Kelly ('Kelly criterion') on the frontend and 1.1x Kelly in the contracts to prevent any issues with transactions reverting due to variations in bankroll size.For games with 2 outcomes the formula is much simpler than for games with more than 2 outcomes. Games with 2 outcomesCoinflip: heads or tailsDice: roll over or under a specific numberMines: find a mine (lose) or find no mines (win)For games with two outcomes, the Kelly criterion establishes that x∗x^*x∗, the optimal fraction of the bankroll that should be allowed to be bet against, is:x∗=pa−1−pb,x^*=\frac{p}{a}-\frac{1-p}{b},x∗=ap​−b1−p​,where:ppp is the probability of the casino winning the bet;aaa is the proportion of the bet lost on a loss;bbb is the proportion of the bet won on a win.Games with more than 2 outcomesPlinko: as many outcomes as there are multiplier slots (depends on the amount of rows)Video Poker: 9 winning hands or no winning hand (10 outcomes)Slots: 8 winning combinations or no winning combination (9 outcomes)Rock Paper Scissors: rock, paper, or scissors (3 outcomes)For games with more than two outcomes, the Kelly criterion does not have a closed-form solution. However, we can find the optimal fraction of the bankroll that should be allowed to be bet against by finding x∗x^*x∗ such that:∑i=1Npibi1+x⋆bi=0,\sum_{i=1}^N \frac{p_ib_i}{1+x^\star b_i} = 0,i=1∑N​1+x⋆bi​pi​bi​​=0,where:NNN is the total number of outcomes;pip_ipi​ is the probability of outcome iii;bib_ibi​ is the percentage of bankroll lost to the player in outcome iii.Using KellyIn practice there will be a slight deviation from 1x/1.1x Kelly for (1) an individual user's max Kelly wager multibets or (2) max Kelly wager bets from different wallets being placed at the same time (~30 second timeframe depending on VRF). When max wager multibets are being lost or when max wagers placed by multiple wallets at the same time are losing, Kelly decreases and the bankroll takes on slightly less risk. When users are winning, Kelly increases and the bankroll takes on slightly more risk. It is (nearly) impossible for the bankroll to reach the 2x+ Kelly zone where the growth rate starts to be negative. This would require multiple max wager bets to be won in a long row and for some games while hitting the maximum multiplier at the same time or spending an insane amount of money. The probabilities for this to happen are insanely low and considered pretty much impossible. Some of the probabilities are explained below.Probability examples for reaching 2x+ KellyTo go further into detail, some of the probabilities for reaching 2x+ Kelly will be calculated. All situations assume max Kelly wagers and either one player using multibets or multiple players betting at the same time (~30 second interval depending on VRF).Let B be the bankroll balance, k be the Kelly fraction of a particular game, and M be the maximum payout multiplier of the same game. If a player wins the maximum payout multiplier M n times in a row, the bankroll decreases by -n*k*(M-1)*B, and so the new bankroll is (1-n*k*(M-1))*B. As a consequence, the new Kelly wager should be:(1−nk(M−1))kB(1 - nk(M-1))kB(1−nk(M−1))kB If the player keeps using the original Kelly wager k*B, the error in Kelly wager is:11−nk(M−1)\frac{1}{{1 - n k (M-1)}}1−nk(M−1)1​If we want the error to be at most 2(i.e. using 2x Kelly instead of the real one) then we arrive at a formula for the number of consecutive wins needed such that the player is playing at over 2x Kelly: n = ceil(0.5/(k*(M-1))). Now let's take a couple of examples. Coin FlipCoin Flip has Kelly fraction k = 0.010204082, maximum payout multiplier of M = 1.98, and probability of maximum payout multiplier of p = 0.5. A player would need n = ceil(0.5/(1.1*k*(M-1))) = 46 consecutive wins to get to 2x Kelly. This happens with probability p^n*100 = 1.2E-05. Highly unlikely.DiceLet's look at the maximum possible multiplier for Dice. This has Kelly fraction k = 0.00001011, maximum payout multiplier of M = 990, and probability of maximum payout multiplier of p = 0.001. A player would need n = ceil(0.5/(1.1*k*(M-1))) = 46 consecutive wins to get to 2x Kelly. This happens with probability p^n*100 = 1.00E-136. So never. Now let's take the minimum possible multiplier for Dice. This has Kelly fraction k = 0.23750000, maximum payout multiplier of M = 1.0421, and probability of maximum payout multiplier of p = 0.95. A player would need n = ceil(0.5/(1.1*k*(M-1))) = 46 consecutive wins to get to 2x Kelly. This happens with probability p^n*100 = 9.45. This seems high, but in this case the player would have to wager k * n = 10.925 times the bankroll size. So in short: the highest chance (9.5%) of achieving 2x+ Kelly is done by winning 46 consecutive Dice games (setting 95% win chance each bet) while risking 11 times the size of the whole bankroll while doing so. This a huge amount of money a player would need to be risking and on top of that the player needs to get extremely lucky too.ConclusionKelly wagers work by optimising long term quantity, so it only makes sense to talk about Kelly for the long term. Events that don't happen are often less important. It is extremely unlikely for the bankroll to ever reach 2x+ Kelly where the growth rate is negative. We expect this never to happen. If it ever would happen, it would happen only temporary for a short time: when an individual player is placing max Kelly wager multibets in one transaction or when other user's max Kelly wager bets are placed at the same time within the ~30 second VRF time frame. On top of that, accepting bets at 2x+ Kelly in the short-term is not a bad thing per se. Only in the long run it would cause negative growth. In ZKasino's particular case the effects would be negligible. The impact of a loss is not high since the probabilities described above are unlikely and by the time that they've happened the bankroll should have already grown. Thus, the bankroll would still be above the starting value.In summary:For bankroll management ZKasino uses the Kelly criterion to determine max wagers for single bets with 1x Kelly on the frontend and 1.1x Kelly in the contracts.The max wager is not adjusted for a single user's multibets or multiple users' bets placed at the same time while the VRF request is pending (~30 seconds). This leads to a slight deviation from the intended max wager. When the bankroll is losing in the aforementioned scenarios, the max wager is not decreasing. This leads to a less safe strategy. However, when the bankroll is winning the max wager is also not increasing. This leads to a safer strategy.Since the bankroll gains the house edge, there is a bias towards winning. This means that on average for max wagers a safer strategy is used compared to the standard Kelly criterion.The region for negative long-term growth starts at 2x+ Kelly. Reaching this region requires significant losses from the bankroll within a user's multibets or while the VRF request is pending. This is either highly unlikely or extremely expensive. For example, the highest chance (9.5%) of achieving 2x+ Kelly is done through 46 consecutive won Dice games (setting 95% win chance for each bet). A total of 11 times the size of the whole bankroll must be risked at the same time.Even if 2x+ Kelly would be reached, the concept of a growth rate only makes sense in the "long run". For multibets a lucky player would only have 54 bets remaining and 30 seconds for bets during the pending VRF request can't be considered long-term either. In short: it is impossible to stay in the 2x+ Kelly region where it would become a risk to the bankroll.Lastly, in practice the average bet size is expected to be lower than the max wager. This results in an even safer strategy.PreviousCoin FlipNextChangelogLast updated 1 year agohttps://www.lesswrong.com/posts/BZ6XaCwN4QGgH9CxF/the-kelly-criterion Page: https://docs.zkasino.io/developer/testing/multi-chain-private-mainnet-with-vrf multi-chain private mainnet with VRF | ZKasino DocumentationZKasino DocumentationWebsitedAppTwitterTelegramMoreWebsitedAppTwitterTelegramSearch...Ctrl + KWelcomeTokenomicsZKasino BridgeZKasino Chain TestnetZKasinoRoadmap and FAQResponsible GamingLive SupportIPFS hostingMainnet GuideOfficial LinksPlatformGlossaryBettingChains and Bet tokensSelf ExclusionDeveloperContract addressesAuditsInfrastructureVRF OracleArchitectureMetaplayProbability, Odds and House EdgeDicePlinkoVideo PokerSlotsMinesRock Paper ScissorsCoin FlipKelly-based bankroll managementChangelogGame contracts v2.1Game contracts v2.0Contracts v1.0Integrated VRFs (old)Testnet Guide (outdated)TestingBNB Chain private fee testingv2.1 private testnet WIPv2.0 public testnetv2.0 private testnetmulti-chain private mainnet with VRFv1.1 public testnetmulti-chain private testnet with VRFv1.0 public testnetwip v1.0 private testnetv2.1 public testnetPowered by GitBookOn this pagev2.0 Mainnet Test ContractsChainlink VRF ResultsDeveloperTestingmulti-chain private mainnet with VRFPreviousv2.0 private testnetNextv1.1 public testnetLast updated 2 years agoMainnet testing for Chainlink's VRF speed and cost.v2.0 Mainnet Test ContractsContractAddressDiamond Contract (Main Contract)Avalanche, BSC, Fantom, PolygonDiceAvalanche, BSC, Fantom, PolygonSlotsAvalanche, BSC, Fantom, PolygonCoin FlipAvalanche, BSC, Fantom, PolygonRock Paper ScissorsAvalanche, BSC, Fantom, PolygonPlinkoAvalanche, BSC, Fantom, PolygonChainlink VRF ResultsNote: issues with Chainlink's VRF on BSC mainnet, testing was done on BSC testnet. Page: https://docs.zkasino.io/zkasino/roadmap-and-faq#future-partnerships-and-integrations Roadmap and FAQ | ZKasino DocumentationZKasino DocumentationWebsitedAppTwitterTelegramMoreWebsitedAppTwitterTelegramSearch...Ctrl + KWelcomeTokenomicsZKasino BridgeZKasino Chain TestnetZKasinoRoadmap and FAQResponsible GamingLive SupportIPFS hostingMainnet GuideOfficial LinksPlatformGlossaryBettingChains and Bet tokensSelf ExclusionDeveloperContract addressesAuditsInfrastructureVRF OracleArchitectureMetaplayProbability, Odds and House EdgeDicePlinkoVideo PokerSlotsMinesRock Paper ScissorsCoin FlipKelly-based bankroll managementChangelogGame contracts v2.1Game contracts v2.0Contracts v1.0Integrated VRFs (old)Testnet Guide (outdated)TestingBNB Chain private fee testingv2.1 private testnet WIPv2.0 public testnetv2.0 private testnetmulti-chain private mainnet with VRFv1.1 public testnetmulti-chain private testnet with VRFv1.0 public testnetwip v1.0 private testnetv2.1 public testnetPowered by GitBookOn this pageBankroll PoolsNetwork ExpansionGasless BetsPlay-to-Earn (P2E)Permissionless bankrollsSubsidised VRF feeGaming Software ProvidersProtocol UpdatesCasino GamesPvP GamesTokenomicsGovernanceFuture Partnerships and IntegrationsTeamZKasinoRoadmap and FAQBankroll PoolsIn a future update, the bankroll will be decentralised through bankroll pools. Anyone will be able to provide liquidity to available bankrolls. Underlying liquidity providers will receive a share of revenue parallel to the bankroll increasing in size.Network ExpansionSince ZKasino focuses on ZK Rollups, its aim is to go live zkSync Era when a VRF becomes available. ZKasino can be expected to go live on StarkNet and Polygon zkEVM as well.Gasless BetsZKasino wants to offer the user the best and cheapest experience. Gasless transactions and thus gasless placing of bets are now possible through Metaplay. We will keep you posted when gasless bets become available.Play-to-Earn (P2E)Once ZKasino's token is live, ZKasino will offer Play-to-Earn (P2E) gaming where betting will grant you ZKasino tokens.Permissionless bankrollsIn the future LPs will be able to permissionlessly create own bankrolls for ERC-20s of their choice and deposit liquidity into these non-custodial pools. This allows any ERC-20 to be a bankroll token (except deflationary tokens).Subsidised VRF feeGenerating randomness involves costs, so VRFs charge a fee for RNG requests. ZKasino aims to subsidise these VRF costs from the user's perspective, so the only thing a player has to worry about is the size of their bet.Gaming Software ProvidersCurrently, ZKasino is using its own software for the games. All code is written by ZKasino, contracts and frontend. In the future, gaming software providers could get integrated into ZKasino when software providers launch on the blockchain.Protocol UpdatesGeneral updates to the protocol planned for the future:Analytics dashboardReferral systemBonusesMore languagesMore soundsImprove graphics and add 3D graphicsChat boxSports bettingPrediction gamesCasino GamesAdd more casino games in the future:LotteryRouletteBlackjackBaccaratCrashDifferent slotsMulti-hand Jacks or BetterPvP GamesAdd PvP games in the future:Rock Paper ScissorsDiceTokenomicsA token is on the roadmap. More information will be provided in the future.GovernanceA DAO is on the roadmap. More information will be provided in the future.Future Partnerships and IntegrationsZKasino has already integrated two VRF projects, Chainlink and Randomizer. ZKasino also has a partnership with MatchboxDAO. In the future there will be more integrations, such as bridges, and more partnerships.TeamBy ZigZag Labs.PreviousZKasino Chain TestnetNextResponsible GamingLast updated 1 year ago Page: https://docs.zkasino.io/zkasino/roadmap-and-faq#gaming-software-providers Roadmap and FAQ | ZKasino DocumentationZKasino DocumentationWebsitedAppTwitterTelegramMoreWebsitedAppTwitterTelegramSearch...Ctrl + KWelcomeTokenomicsZKasino BridgeZKasino Chain TestnetZKasinoRoadmap and FAQResponsible GamingLive SupportIPFS hostingMainnet GuideOfficial LinksPlatformGlossaryBettingChains and Bet tokensSelf ExclusionDeveloperContract addressesAuditsInfrastructureVRF OracleArchitectureMetaplayProbability, Odds and House EdgeDicePlinkoVideo PokerSlotsMinesRock Paper ScissorsCoin FlipKelly-based bankroll managementChangelogGame contracts v2.1Game contracts v2.0Contracts v1.0Integrated VRFs (old)Testnet Guide (outdated)TestingBNB Chain private fee testingv2.1 private testnet WIPv2.0 public testnetv2.0 private testnetmulti-chain private mainnet with VRFv1.1 public testnetmulti-chain private testnet with VRFv1.0 public testnetwip v1.0 private testnetv2.1 public testnetPowered by GitBookOn this pageBankroll PoolsNetwork ExpansionGasless BetsPlay-to-Earn (P2E)Permissionless bankrollsSubsidised VRF feeGaming Software ProvidersProtocol UpdatesCasino GamesPvP GamesTokenomicsGovernanceFuture Partnerships and IntegrationsTeamZKasinoRoadmap and FAQBankroll PoolsIn a future update, the bankroll will be decentralised through bankroll pools. Anyone will be able to provide liquidity to available bankrolls. Underlying liquidity providers will receive a share of revenue parallel to the bankroll increasing in size.Network ExpansionSince ZKasino focuses on ZK Rollups, its aim is to go live zkSync Era when a VRF becomes available. ZKasino can be expected to go live on StarkNet and Polygon zkEVM as well.Gasless BetsZKasino wants to offer the user the best and cheapest experience. Gasless transactions and thus gasless placing of bets are now possible through Metaplay. We will keep you posted when gasless bets become available.Play-to-Earn (P2E)Once ZKasino's token is live, ZKasino will offer Play-to-Earn (P2E) gaming where betting will grant you ZKasino tokens.Permissionless bankrollsIn the future LPs will be able to permissionlessly create own bankrolls for ERC-20s of their choice and deposit liquidity into these non-custodial pools. This allows any ERC-20 to be a bankroll token (except deflationary tokens).Subsidised VRF feeGenerating randomness involves costs, so VRFs charge a fee for RNG requests. ZKasino aims to subsidise these VRF costs from the user's perspective, so the only thing a player has to worry about is the size of their bet.Gaming Software ProvidersCurrently, ZKasino is using its own software for the games. All code is written by ZKasino, contracts and frontend. In the future, gaming software providers could get integrated into ZKasino when software providers launch on the blockchain.Protocol UpdatesGeneral updates to the protocol planned for the future:Analytics dashboardReferral systemBonusesMore languagesMore soundsImprove graphics and add 3D graphicsChat boxSports bettingPrediction gamesCasino GamesAdd more casino games in the future:LotteryRouletteBlackjackBaccaratCrashDifferent slotsMulti-hand Jacks or BetterPvP GamesAdd PvP games in the future:Rock Paper ScissorsDiceTokenomicsA token is on the roadmap. More information will be provided in the future.GovernanceA DAO is on the roadmap. More information will be provided in the future.Future Partnerships and IntegrationsZKasino has already integrated two VRF projects, Chainlink and Randomizer. ZKasino also has a partnership with MatchboxDAO. In the future there will be more integrations, such as bridges, and more partnerships.TeamBy ZigZag Labs.PreviousZKasino Chain TestnetNextResponsible GamingLast updated 1 year ago Page: https://docs.zkasino.io/developer/changelog/integrated-vrfs-old Integrated VRFs (old) | ZKasino DocumentationZKasino DocumentationWebsitedAppTwitterTelegramMoreWebsitedAppTwitterTelegramSearch...Ctrl + KWelcomeTokenomicsZKasino BridgeZKasino Chain TestnetZKasinoRoadmap and FAQResponsible GamingLive SupportIPFS hostingMainnet GuideOfficial LinksPlatformGlossaryBettingChains and Bet tokensSelf ExclusionDeveloperContract addressesAuditsInfrastructureVRF OracleArchitectureMetaplayProbability, Odds and House EdgeDicePlinkoVideo PokerSlotsMinesRock Paper ScissorsCoin FlipKelly-based bankroll managementChangelogGame contracts v2.1Game contracts v2.0Contracts v1.0Integrated VRFs (old)Testnet Guide (outdated)TestingBNB Chain private fee testingv2.1 private testnet WIPv2.0 public testnetv2.0 private testnetmulti-chain private mainnet with VRFv1.1 public testnetmulti-chain private testnet with VRFv1.0 public testnetwip v1.0 private testnetv2.1 public testnetPowered by GitBookOn this pageDeveloperChangelogIntegrated VRFs (old)NetworkVRF integrationSmart Contract addressBNB ChainChainlink VRF (Subscription)VRFCoordinatorV2ArbitrumRandomizer VRF (Beacon)RandomizerDiamondTestnetsPolygon MumbaiChainlink VRF (Subscription)VRFCoordinatorV2BNB Chain TestnetChainlink VRF (Subscription)VRFCoordinatorV2Fantom TestnetChainlink VRF (Subscription)VRFCoordinatorV2Arbitrum GoerliRandomizerTransparentUpgradeableProxyPreviousContracts v1.0NextTestnet Guide (outdated)Last updated 1 year ago Page: https://docs.zkasino.io/developer/testing/multi-chain-private-testnet-with-vrf#multi-chain-test-contracts multi-chain private testnet with VRF | ZKasino DocumentationZKasino DocumentationWebsitedAppTwitterTelegramMoreWebsitedAppTwitterTelegramSearch...Ctrl + KWelcomeTokenomicsZKasino BridgeZKasino Chain TestnetZKasinoRoadmap and FAQResponsible GamingLive SupportIPFS hostingMainnet GuideOfficial LinksPlatformGlossaryBettingChains and Bet tokensSelf ExclusionDeveloperContract addressesAuditsInfrastructureVRF OracleArchitectureMetaplayProbability, Odds and House EdgeDicePlinkoVideo PokerSlotsMinesRock Paper ScissorsCoin FlipKelly-based bankroll managementChangelogGame contracts v2.1Game contracts v2.0Contracts v1.0Integrated VRFs (old)Testnet Guide (outdated)TestingBNB Chain private fee testingv2.1 private testnet WIPv2.0 public testnetv2.0 private testnetmulti-chain private mainnet with VRFv1.1 public testnetmulti-chain private testnet with VRFv1.0 public testnetwip v1.0 private testnetv2.1 public testnetPowered by GitBookOn this pageMulti-chain Test ContractsChainlink ResultsRandomizer (previously soRandom) ResultsDeveloperTestingmulti-chain private testnet with VRFPreviousv1.1 public testnetNextv1.0 public testnetLast updated